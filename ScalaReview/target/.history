;set _root_.scala.collection.Seq(shellPrompt := { _ => "" },SettingKey[_root_.scala.Option[_root_.sbt.File]]("sbtStructureOutputFile") in _root_.sbt.Global := _root_.scala.Some(_root_.sbt.file("/private/var/folders/5g/z8fvjwmd049505c_xh128dmm0000gn/T/sbt-structure.xml")),SettingKey[_root_.java.lang.String]("sbtStructureOptions") in _root_.sbt.Global := "download, resolveClassifiers");apply -cp "/Users/ramsesgarcia/Library/Application Support/IntelliJIdea2018.1/Scala/launcher/sbt-structure-1.0.jar" org.jetbrains.sbt.CreateTasks;*/*:dumpStructure
exit
;set _root_.scala.collection.Seq(shellPrompt := { _ => "" },SettingKey[_root_.scala.Option[_root_.sbt.File]]("sbtStructureOutputFile") in _root_.sbt.Global := _root_.scala.Some(_root_.sbt.file("/private/var/folders/5g/z8fvjwmd049505c_xh128dmm0000gn/T/sbt-structure.xml")),SettingKey[_root_.java.lang.String]("sbtStructureOptions") in _root_.sbt.Global := "download, resolveClassifiers");apply -cp "/Users/ramsesgarcia/Library/Application Support/IntelliJIdea2018.1/Scala/launcher/sbt-structure-1.0.jar" org.jetbrains.sbt.CreateTasks;*/*:dumpStructure
exit
;set _root_.scala.collection.Seq(shellPrompt := { _ => "" },SettingKey[_root_.scala.Option[_root_.sbt.File]]("sbtStructureOutputFile") in _root_.sbt.Global := _root_.scala.Some(_root_.sbt.file("/private/var/folders/5g/z8fvjwmd049505c_xh128dmm0000gn/T/sbt-structure.xml")),SettingKey[_root_.java.lang.String]("sbtStructureOptions") in _root_.sbt.Global := "download, resolveClassifiers");apply -cp "/Users/ramsesgarcia/Library/Application Support/IntelliJIdea2018.1/Scala/launcher/sbt-structure-1.0.jar" org.jetbrains.sbt.CreateTasks;*/*:dumpStructure
exit
;set _root_.scala.collection.Seq(shellPrompt := { _ => "" },SettingKey[_root_.scala.Option[_root_.sbt.File]]("sbtStructureOutputFile") in _root_.sbt.Global := _root_.scala.Some(_root_.sbt.file("/private/var/folders/5g/z8fvjwmd049505c_xh128dmm0000gn/T/sbt-structure.xml")),SettingKey[_root_.java.lang.String]("sbtStructureOptions") in _root_.sbt.Global := "download, resolveClassifiers");apply -cp "/Users/ramsesgarcia/Library/Application Support/IntelliJIdea2018.1/Scala/launcher/sbt-structure-1.0.jar" org.jetbrains.sbt.CreateTasks;*/*:dumpStructure
exit
;set _root_.scala.collection.Seq(shellPrompt := { _ => "" },SettingKey[_root_.scala.Option[_root_.sbt.File]]("sbtStructureOutputFile") in _root_.sbt.Global := _root_.scala.Some(_root_.sbt.file("/private/var/folders/5g/z8fvjwmd049505c_xh128dmm0000gn/T/sbt-structure.xml")),SettingKey[_root_.java.lang.String]("sbtStructureOptions") in _root_.sbt.Global := "download, resolveClassifiers");apply -cp "/Users/ramsesgarcia/Library/Application Support/IntelliJIdea2018.1/Scala/launcher/sbt-structure-1.0.jar" org.jetbrains.sbt.CreateTasks;*/*:dumpStructure
exit
;set _root_.scala.collection.Seq(shellPrompt := { _ => "" },SettingKey[_root_.scala.Option[_root_.sbt.File]]("sbtStructureOutputFile") in _root_.sbt.Global := _root_.scala.Some(_root_.sbt.file("/private/var/folders/5g/z8fvjwmd049505c_xh128dmm0000gn/T/sbt-structure.xml")),SettingKey[_root_.java.lang.String]("sbtStructureOptions") in _root_.sbt.Global := "download, resolveClassifiers");apply -cp "/Users/ramsesgarcia/Library/Application Support/IntelliJIdea2018.1/Scala/launcher/sbt-structure-1.0.jar" org.jetbrains.sbt.CreateTasks;*/*:dumpStructure
exit
{file:/Users/ramsesgarcia/Documents/ragagit/Linux/ScalaReview/}scalareview/testOnly StackSpec -- -t "A Stack should pop values in last-in-first-out order"
initialize
show {file:/Users/ramsesgarcia/Documents/ragagit/Linux/ScalaReview/}scalareview/test:testOptions
set testOptions.in(ProjectRef(uri("file:/Users/ramsesgarcia/Documents/ragagit/Linux/ScalaReview/"), "scalareview")) in Test+=Tests.Argument(TestFrameworks.ScalaTest, "-oDU")
show {file:/Users/ramsesgarcia/Documents/ragagit/Linux/ScalaReview/}scalareview/test:parallelExecution
set parallelExecution.in(ProjectRef(uri("file:/Users/ramsesgarcia/Documents/ragagit/Linux/ScalaReview/"), "scalareview")) in Test:=false
{file:/Users/ramsesgarcia/Documents/ragagit/Linux/ScalaReview/}scalareview/testOnly StackSpec -- -t "A Stack should pop values in last-in-first-out order"
set parallelExecution.in(ProjectRef(uri("file:/Users/ramsesgarcia/Documents/ragagit/Linux/ScalaReview/"), "scalareview")) in Test:=true
{file:/Users/ramsesgarcia/Documents/ragagit/Linux/ScalaReview/}scalareview/testOnly StackSpec -- -t "A Stack should pop values in last-in-first-out order"
